# This CMakeLists.txt is auto-generated

option(0201 "variables" ON)
if(0201)
    add_executable(0201_test 0201_test.cpp)
    target_include_directories(0201_test PRIVATE ${PROJECT_SOURCE_DIR}/exercise/02_basic_syntax)
    target_link_libraries(0201_test GTest::gtest_main)
    include(GoogleTest)
    gtest_discover_tests(0201_test)
endif()

option(0202 "primitive_types" ON)
if(0202)
    add_executable(0202_test 0202_test.cpp)
    target_include_directories(0202_test PRIVATE ${PROJECT_SOURCE_DIR}/exercise/02_basic_syntax)
    target_link_libraries(0202_test GTest::gtest_main)
    include(GoogleTest)
    gtest_discover_tests(0202_test)
endif()

option(0203 "literals" ON)
if(0203)
    add_executable(0203_test 0203_test.cpp)
    target_include_directories(0203_test PRIVATE ${PROJECT_SOURCE_DIR}/exercise/02_basic_syntax)
    target_link_libraries(0203_test GTest::gtest_main)
    include(GoogleTest)
    gtest_discover_tests(0203_test)
endif()

option(0204 "pointers_and_references" ON)
if(0204)
    add_executable(0204_test 0204_test.cpp)
    target_include_directories(0204_test PRIVATE ${PROJECT_SOURCE_DIR}/exercise/02_basic_syntax)
    target_link_libraries(0204_test GTest::gtest_main)
    include(GoogleTest)
    gtest_discover_tests(0204_test)
endif()

option(0205 "comments" ON)
if(0205)
    add_executable(0205_test 0205_test.cpp)
    target_include_directories(0205_test PRIVATE ${PROJECT_SOURCE_DIR}/exercise/02_basic_syntax)
    target_link_libraries(0205_test GTest::gtest_main)
    include(GoogleTest)
    gtest_discover_tests(0205_test)
endif()

option(0206 "control_flow" ON)
if(0206)
    add_executable(0206_test 0206_test.cpp)
    target_include_directories(0206_test PRIVATE ${PROJECT_SOURCE_DIR}/exercise/02_basic_syntax)
    target_link_libraries(0206_test GTest::gtest_main)
    include(GoogleTest)
    gtest_discover_tests(0206_test)
endif()

option(0207 "operators" ON)
if(0207)
    add_executable(0207_test 0207_test.cpp)
    target_include_directories(0207_test PRIVATE ${PROJECT_SOURCE_DIR}/exercise/02_basic_syntax)
    target_link_libraries(0207_test GTest::gtest_main)
    include(GoogleTest)
    gtest_discover_tests(0207_test)
endif()

option(0208 "functions" ON)
if(0208)
    add_executable(0208_test 0208_test.cpp)
    target_include_directories(0208_test PRIVATE ${PROJECT_SOURCE_DIR}/exercise/02_basic_syntax)
    target_link_libraries(0208_test GTest::gtest_main)
    include(GoogleTest)
    gtest_discover_tests(0208_test)
endif()

option(0209 "lambda_expressions" ON)
if(0209)
    add_executable(0209_test 0209_test.cpp)
    target_include_directories(0209_test PRIVATE ${PROJECT_SOURCE_DIR}/exercise/02_basic_syntax)
    target_link_libraries(0209_test GTest::gtest_main)
    include(GoogleTest)
    gtest_discover_tests(0209_test)
endif()

